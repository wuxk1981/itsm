<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdhy.platform.itsm.dao.PollingPlanMapper" >
  <resultMap id="BaseResultMap" type="com.zdhy.platform.itsm.entity.PollingPlan" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="worker_names" property="workerNames" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="polling_time" property="pollingTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zdhy.platform.itsm.entity.PollingPlan" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap type="com.zdhy.platform.itsm.entity.PollingPlan" id="CascadeResultMap" extends="ResultMapWithBLOBs">
		<collection property="dispatchingPlan" column="object_id"  ofType="DispatchingPlan">
			<id column="dispatchingPlan_id" property="id" jdbcType="VARCHAR" />
			<result column="begin_date" property="beginDate" jdbcType="TIMESTAMP" />
		    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
		    <result column="expect_times" property="expectTimes" jdbcType="INTEGER" />
		    <result column="polling_period" property="pollingPeriod" jdbcType="INTEGER" />
		    <result column="period_day" property="periodDay" jdbcType="INTEGER" />
		    <result column="period_weekday" property="periodWeekday" jdbcType="INTEGER" />
		    <result column="period_month" property="periodMonth" jdbcType="INTEGER" />
		    <result column="moment" property="moment" jdbcType="INTEGER" />
		    <result column="moment_value" property="momentValue" jdbcType="VARCHAR" />
		    <result column="begining_time" property="beginingTime" jdbcType="VARCHAR" />
		    <result column="in_between" property="inBetween" jdbcType="INTEGER" />
		    <result column="is_befor" property="isBefor" jdbcType="INTEGER" />
		    <result column="time" property="time" jdbcType="INTEGER" />
		    <result column="timer_mode" property="timerMode" jdbcType="INTEGER" />
		    <result column="remind_way" property="remindWay" jdbcType="INTEGER" />
		    <result column="plan_id" property="planId" jdbcType="VARCHAR" />
		</collection>
	</resultMap>
  <sql id="Base_Column_List" >
    id, name, worker_names, status
  </sql>
  <sql id="Blob_Column_List" >
    description,polling_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from it_polling_plan
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByName" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from it_polling_plan
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from it_polling_plan
  </select>
  <select id="query" resultType="PollingPlan" parameterType="java.util.HashMap">
  select  <include refid="Base_Column_List" />
  from it_polling_plan
  <where>
	<if test="pollingPlan.name != null and pollingPlan.name != ''">
		AND name like '%${pollingPlan.name}%'
	</if>
	<if test="pollingPlan.workerNames != null and pollingPlan.workerNames != ''">
		AND worker_names like '%${pollingPlan.workerNames}%'
	</if>
  </where>
  </select>
  <!-- 根据巡检计划查询调度计划 -->
  <select id="findByPollPlanId" resultMap="CascadeResultMap" parameterType="java.lang.String">
  select pp.id,pp.name,pp.worker_names,pp.status,pp.description,
  dp.id dispatchingPlan_id,dp.begin_date,dp.end_date,dp.expect_times,dp.polling_period,
  dp.period_day,dp.period_weekday, dp.period_month, dp.moment, dp.moment_value, dp.begining_time,
  dp.in_between, dp.is_befor, dp.time, dp.timer_mode, dp.remind_way, dp.plan_id
  from it_polling_plan pp
  left join it_dispatching_plan dp on dp.plan_id = pp.id
  where pp.id = #{id,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据巡检计划id查询巡检对象及模板 -->
  <select id="selectTemplateAndObject" parameterType="java.lang.String" resultType="java.util.Map">
  select pt.name templateName,GROUP_CONCAT(po.name separator ',') objectName,po.id from it_polling_object po
	JOIN it_polling_template pt on pt.id = po.template_id
	JOIN it_polling_object_plan pop on po.id = pop.object_id
	WHERE pop.plan_id = #{id,jdbcType=VARCHAR}
	GROUP BY pt.id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from it_polling_plan
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zdhy.platform.itsm.entity.PollingPlan" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">  
        select  replace(uuid(),'-','')   from dual  
    </selectKey>
    insert into it_polling_plan (id, name, worker_names, 
      status,description
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{workerNames,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zdhy.platform.itsm.entity.PollingPlan" >
    <selectKey keyProperty="id" resultType="String" order="BEFORE">  
        select  replace(uuid(),'-','')   from dual  
    </selectKey>
    insert into it_polling_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="workerNames != null" >
        worker_names,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="workerNames != null" >
        #{workerNames,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdhy.platform.itsm.entity.PollingPlan" >
    update it_polling_plan
    <set >
      <if test="name != null and name != ''" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="workerNames != null and workerNames != ''" >
        worker_names = #{workerNames,jdbcType=VARCHAR},
      </if>
      <if test="status != null and status != ''" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null and description != ''" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zdhy.platform.itsm.entity.PollingPlan" >
    update it_polling_plan
    set name = #{name,jdbcType=VARCHAR},
      worker_names = #{workerNames,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 根据巡检计划查询调度计划 -->
  <!-- <select id="selectByPollPlanId" parameterType="java.lang.String" resultType="com.zdhy.platform.itsm.entity.DispatchingPlan">
  	select id, begin_date beginDate, end_date endDate, expect_times expectTimes, polling_period pollingPeriod,
  	 period_day periodDay, period_weekday periodWeekday, period_month periodMonth, moment,moment_value momentValue,
      begining_time beginingTime, in_between inBetween, is_befor isBefor, time, timer_mode timerMode, 
    remind_way remindWay, plan_id planId
    from it_dispatching_plan
    where plan_id = #{planId,jdbcType=VARCHAR}
  </select> -->
  
</mapper>